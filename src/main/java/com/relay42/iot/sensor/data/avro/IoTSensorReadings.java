/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.relay42.iot.sensor.data.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class IoTSensorReadings extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3621509872331284788L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IoTSensorReadings\",\"namespace\":\"com.relay42.iot.sensor.data.avro\",\"fields\":[{\"name\":\"sensorId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sensorType\",\"type\":{\"type\":\"enum\",\"name\":\"SensorType\",\"symbols\":[\"THERMOSTAT\",\"HEART_RATE\",\"CAR_FUEL_LEVEL\"]}},{\"name\":\"readingValue\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":4}},{\"name\":\"unit\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"readingAt\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<IoTSensorReadings> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<IoTSensorReadings> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<IoTSensorReadings> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<IoTSensorReadings> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<IoTSensorReadings> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this IoTSensorReadings to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a IoTSensorReadings from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a IoTSensorReadings instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static IoTSensorReadings fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String sensorId;
  private com.relay42.iot.sensor.data.avro.SensorType sensorType;
  private java.nio.ByteBuffer readingValue;
  private java.lang.String unit;
  private long readingAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IoTSensorReadings() {}

  /**
   * All-args constructor.
   * @param sensorId The new value for sensorId
   * @param sensorType The new value for sensorType
   * @param readingValue The new value for readingValue
   * @param unit The new value for unit
   * @param readingAt The new value for readingAt
   */
  public IoTSensorReadings(java.lang.String sensorId, com.relay42.iot.sensor.data.avro.SensorType sensorType, java.nio.ByteBuffer readingValue, java.lang.String unit, java.lang.Long readingAt) {
    this.sensorId = sensorId;
    this.sensorType = sensorType;
    this.readingValue = readingValue;
    this.unit = unit;
    this.readingAt = readingAt;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sensorId;
    case 1: return sensorType;
    case 2: return readingValue;
    case 3: return unit;
    case 4: return readingAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sensorId = value$ != null ? value$.toString() : null; break;
    case 1: sensorType = (com.relay42.iot.sensor.data.avro.SensorType)value$; break;
    case 2: readingValue = (java.nio.ByteBuffer)value$; break;
    case 3: unit = value$ != null ? value$.toString() : null; break;
    case 4: readingAt = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'sensorId' field.
   * @return The value of the 'sensorId' field.
   */
  public java.lang.String getSensorId() {
    return sensorId;
  }


  /**
   * Sets the value of the 'sensorId' field.
   * @param value the value to set.
   */
  public void setSensorId(java.lang.String value) {
    this.sensorId = value;
  }

  /**
   * Gets the value of the 'sensorType' field.
   * @return The value of the 'sensorType' field.
   */
  public com.relay42.iot.sensor.data.avro.SensorType getSensorType() {
    return sensorType;
  }


  /**
   * Sets the value of the 'sensorType' field.
   * @param value the value to set.
   */
  public void setSensorType(com.relay42.iot.sensor.data.avro.SensorType value) {
    this.sensorType = value;
  }

  /**
   * Gets the value of the 'readingValue' field.
   * @return The value of the 'readingValue' field.
   */
  public java.nio.ByteBuffer getReadingValue() {
    return readingValue;
  }


  /**
   * Sets the value of the 'readingValue' field.
   * @param value the value to set.
   */
  public void setReadingValue(java.nio.ByteBuffer value) {
    this.readingValue = value;
  }

  /**
   * Gets the value of the 'unit' field.
   * @return The value of the 'unit' field.
   */
  public java.lang.String getUnit() {
    return unit;
  }


  /**
   * Sets the value of the 'unit' field.
   * @param value the value to set.
   */
  public void setUnit(java.lang.String value) {
    this.unit = value;
  }

  /**
   * Gets the value of the 'readingAt' field.
   * @return The value of the 'readingAt' field.
   */
  public long getReadingAt() {
    return readingAt;
  }


  /**
   * Sets the value of the 'readingAt' field.
   * @param value the value to set.
   */
  public void setReadingAt(long value) {
    this.readingAt = value;
  }

  /**
   * Creates a new IoTSensorReadings RecordBuilder.
   * @return A new IoTSensorReadings RecordBuilder
   */
  public static com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder newBuilder() {
    return new com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder();
  }

  /**
   * Creates a new IoTSensorReadings RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IoTSensorReadings RecordBuilder
   */
  public static com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder newBuilder(com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder other) {
    if (other == null) {
      return new com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder();
    } else {
      return new com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder(other);
    }
  }

  /**
   * Creates a new IoTSensorReadings RecordBuilder by copying an existing IoTSensorReadings instance.
   * @param other The existing instance to copy.
   * @return A new IoTSensorReadings RecordBuilder
   */
  public static com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder newBuilder(com.relay42.iot.sensor.data.avro.IoTSensorReadings other) {
    if (other == null) {
      return new com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder();
    } else {
      return new com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder(other);
    }
  }

  /**
   * RecordBuilder for IoTSensorReadings instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IoTSensorReadings>
    implements org.apache.avro.data.RecordBuilder<IoTSensorReadings> {

    private java.lang.String sensorId;
    private com.relay42.iot.sensor.data.avro.SensorType sensorType;
    private java.nio.ByteBuffer readingValue;
    private java.lang.String unit;
    private long readingAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sensorId)) {
        this.sensorId = data().deepCopy(fields()[0].schema(), other.sensorId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sensorType)) {
        this.sensorType = data().deepCopy(fields()[1].schema(), other.sensorType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.readingValue)) {
        this.readingValue = data().deepCopy(fields()[2].schema(), other.readingValue);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.unit)) {
        this.unit = data().deepCopy(fields()[3].schema(), other.unit);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.readingAt)) {
        this.readingAt = data().deepCopy(fields()[4].schema(), other.readingAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing IoTSensorReadings instance
     * @param other The existing instance to copy.
     */
    private Builder(com.relay42.iot.sensor.data.avro.IoTSensorReadings other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.sensorId)) {
        this.sensorId = data().deepCopy(fields()[0].schema(), other.sensorId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sensorType)) {
        this.sensorType = data().deepCopy(fields()[1].schema(), other.sensorType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.readingValue)) {
        this.readingValue = data().deepCopy(fields()[2].schema(), other.readingValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unit)) {
        this.unit = data().deepCopy(fields()[3].schema(), other.unit);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.readingAt)) {
        this.readingAt = data().deepCopy(fields()[4].schema(), other.readingAt);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'sensorId' field.
      * @return The value.
      */
    public java.lang.String getSensorId() {
      return sensorId;
    }


    /**
      * Sets the value of the 'sensorId' field.
      * @param value The value of 'sensorId'.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder setSensorId(java.lang.String value) {
      validate(fields()[0], value);
      this.sensorId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sensorId' field has been set.
      * @return True if the 'sensorId' field has been set, false otherwise.
      */
    public boolean hasSensorId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sensorId' field.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder clearSensorId() {
      sensorId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sensorType' field.
      * @return The value.
      */
    public com.relay42.iot.sensor.data.avro.SensorType getSensorType() {
      return sensorType;
    }


    /**
      * Sets the value of the 'sensorType' field.
      * @param value The value of 'sensorType'.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder setSensorType(com.relay42.iot.sensor.data.avro.SensorType value) {
      validate(fields()[1], value);
      this.sensorType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sensorType' field has been set.
      * @return True if the 'sensorType' field has been set, false otherwise.
      */
    public boolean hasSensorType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sensorType' field.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder clearSensorType() {
      sensorType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'readingValue' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getReadingValue() {
      return readingValue;
    }


    /**
      * Sets the value of the 'readingValue' field.
      * @param value The value of 'readingValue'.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder setReadingValue(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.readingValue = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'readingValue' field has been set.
      * @return True if the 'readingValue' field has been set, false otherwise.
      */
    public boolean hasReadingValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'readingValue' field.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder clearReadingValue() {
      readingValue = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'unit' field.
      * @return The value.
      */
    public java.lang.String getUnit() {
      return unit;
    }


    /**
      * Sets the value of the 'unit' field.
      * @param value The value of 'unit'.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder setUnit(java.lang.String value) {
      validate(fields()[3], value);
      this.unit = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'unit' field has been set.
      * @return True if the 'unit' field has been set, false otherwise.
      */
    public boolean hasUnit() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'unit' field.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder clearUnit() {
      unit = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'readingAt' field.
      * @return The value.
      */
    public long getReadingAt() {
      return readingAt;
    }


    /**
      * Sets the value of the 'readingAt' field.
      * @param value The value of 'readingAt'.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder setReadingAt(long value) {
      validate(fields()[4], value);
      this.readingAt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'readingAt' field has been set.
      * @return True if the 'readingAt' field has been set, false otherwise.
      */
    public boolean hasReadingAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'readingAt' field.
      * @return This builder.
      */
    public com.relay42.iot.sensor.data.avro.IoTSensorReadings.Builder clearReadingAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public IoTSensorReadings build() {
      try {
        IoTSensorReadings record = new IoTSensorReadings();
        record.sensorId = fieldSetFlags()[0] ? this.sensorId : (java.lang.String) defaultValue(fields()[0]);
        record.sensorType = fieldSetFlags()[1] ? this.sensorType : (com.relay42.iot.sensor.data.avro.SensorType) defaultValue(fields()[1]);
        record.readingValue = fieldSetFlags()[2] ? this.readingValue : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        record.unit = fieldSetFlags()[3] ? this.unit : (java.lang.String) defaultValue(fields()[3]);
        record.readingAt = fieldSetFlags()[4] ? this.readingAt : (java.lang.Long) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<IoTSensorReadings>
    WRITER$ = (org.apache.avro.io.DatumWriter<IoTSensorReadings>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<IoTSensorReadings>
    READER$ = (org.apache.avro.io.DatumReader<IoTSensorReadings>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










